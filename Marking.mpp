partition TIMEGROUPS
{
	407,414,421,428,435,442,449,456,463,470,477,484, //Vol 3
	505,											 //No marking
	512,519,526,533,540,547,554,561,568,575,582,589, //Vol 4
	596,603,610,617,624,631,638,645,652,659,666,673 //Vol 5
};

classification MARK
{
	week0,week1,week2,week3,week4,week5,week6,week7,week8,week9,week10,week11,			//Vol 3
	nomarkingweeks12,																		 //No marking
	week13,week14,week15,week16,week17,week18,week19,week20,week21,week22,week23,week24,//Vol 4
	week25,week26,week27,week28,week29,week30,week31,week32,week33,week34,week35,week36,//Vol 5
	max37,never99
};

partition AGE_PART
{
	1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200
};

TIME TsetseFly::timeCapture()
{
	TIME mark_event = TIME_INFINITE;
	double capture_random_number = RandUniform(3);
	if(capture_random_number < capture_prob && markable)
	{
		if (actor_id == 61163)
		{
			double ha = 1;
		}
		double fly_round_unif = RandUniform(8);
		if (capture_random_number/capture_prob <=0.5)
		{
			mark_event = WAIT( (TIME) 0.25 + ( 0.354 - 0.25 )*fly_round_unif );
		} else
		{
			mark_event = WAIT( (TIME) 0.646 + (0.75 - 0.646 )*fly_round_unif );
		}
	}
	return mark_event;
}

void TsetseFly::CaptureEvent()
{
	int curentEventInterval = SPLIT(time, TIMEGROUPS);
	if (curentEventInterval != previousEventInterval && curentEventInterval != 12)
	{
		switch(nmarks)
		{
		case 0: {mark1 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 1: {mark2 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 2: {mark3 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 3: {mark4 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 4: {mark5 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 5: {mark6 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 6: {mark7 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 7: {mark8 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 8: {mark9 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		case 9: {mark10 = IntTo_MARK( SPLIT(time, TIMEGROUPS) ); }; break;
		};
		nmarks++;
		previousEventInterval = SPLIT(time, TIMEGROUPS);
	};
}
