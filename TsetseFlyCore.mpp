parameters 
{
	int		StartingPopulationSize;
	double MortalityHazard;
};


actor_set TsetseFly asAllTsetseFly;

classification GENDER
{
	MALE,
	FEMALE
};

actor TsetseFly
{
	TIME next_larva_deposit = { TIME_INFINITE };

	REPORT_TIME report_time = { 0 };
	GENDER gender = ( RandUniform(2) <= 0.5 ) ? FEMALE : MALE;
	
	logical alive = {TRUE};
	
	event timeMortalityEvent, MortalityEvent;
	
	void Start();
	void Finish();
};

TIME TsetseFly::timeMortalityEvent()
{
	TIME tEventTime = TIME_INFINITE;
	tEventTime = WAIT( - TIME( log( RandUniform(1) ) / MortalityHazard ) );
	return tEventTime;
}

void TsetseFly::MortalityEvent()
{
	alive = FALSE;
	Finish();
}

void TsetseFly::Start()
{
	age = 0;
	time;
	
	if (gender == FEMALE)
	{
		next_larva_deposit = WAIT((TIME) NEXT_LARVA_DEPOSIT( report_time, k1[ first_larvae ], k2[ first_larvae ] ) );
	}
}

void TsetseFly::Finish()
{
}

track TsetseFly
{
	gender,
	next_larva_deposit
};