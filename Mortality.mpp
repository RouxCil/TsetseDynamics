double Survival_Function(int Age, double k1, double k2, double k3, int current_report_time)
{
	double prop = exp(k1*(exp(-k2* exp( -alpha * DailyAvgTemperature[RANGE_POS( REPORT_TIME, int(current_report_time) )] ) *Age) - exp(k3*Age)));
	return prop;
}

TIME TsetseFly::timeMortality()
{
	TIME death_event = TIME_INFINITE;
	double death_probability = 1 - Survival_Function(int_age + 1,  mortality_const[gender], mortality_TempPar[gender], mortality_AgePar[gender], report_time) / Survival_Function(int_age,  mortality_const[gender], mortality_TempPar[gender], mortality_AgePar[gender], report_time);
	double random_number = RandUniform(1);
	if(random_number < death_probability)
	{
		death_event = WAIT( (TIME) RandUniform(5) );
	}
	return death_event;
}

void TsetseFly::MortalityEvent()
{
	alive = FALSE;
	Finish();
}